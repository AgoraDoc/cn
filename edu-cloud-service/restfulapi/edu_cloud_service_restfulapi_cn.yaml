openapi: 3.0.0
info:

  description: >
    本页介绍 Agora 教育云服务 RESTful API 的详细信息，同时提供 **Try it out** 功能，使你在文档页内即能进行 RESTful API 的调试。

    ## 认证方式

    教育云录制 RESTful API 仅支持 HTTPS 协议。发送请求时，你需要提供客户 ID 和客户密钥通过 Basic HTTP 认证并填入 HTTP 请求头部的 `Authorization` 字段。

    你可以在控制台的 [RESTful API](https://console.agora.io/restfulApi) 页面找到你的客户 ID 和客户密钥。具体生成
    `Authorization` 字段的方法请参考 [RESTful API 认证](https://docs.agora.io/cn/faq/restful_authentication)。你也可以使用本页的 **Try it out** 功能生成该字段。

  version: 2020.10.15
  title: Agora Edu Cloud Service
servers:
  - url: https://api.agora.io

security:
  - agora_auth: []

paths:
  /scene/apps/{appId}/v1/rooms/{roomUuid}/config:
    post:
      tags:
      - "房间预设"
      summary: 创建房间
      operationId: post
      description: 调用该方法创建一个房间并进行配置。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
      requestBody:
        description: 你需要在请求包体中传入以下参数。
        content:
          application/json:
            schema:
              type: object
              required:
                - roomName
                - roleConfig
              properties:
                roomName:
                  type: string
                  description: 房间名称，用于显示，长度在 64 字节以内。
                roleConfig:
                  type: object
                  description: 角色配置，用于指定可以进入房间的角色。
                  required:
                      - host
                      - audience
                  properties:
                    host:
                      type: object
                      description: 主播的具体配置。
                      properties:
                        limit:
                          type: integer
                          description: 该角色的用户数量上限。默认值为 -1，表示无上限。最大值为 4294967296。
                          default: -1
                        verifyType:
                          type: integer
                          description: 验证类型，可设为：

                            - 0：允许匿名，表示任何用户都可以直接从客户端进入房间。

                            - 1：不允许匿名，表示只有指定用户才能进入房间，开发者可通过**房间-添加用户**接口预先指定能够进入房间的用户，这样可以提高安全性。
                          default: 0
                        subscribe:
                          type: integer
                          description: 客户端是否同步此类角色数据：

                            - 0：不订阅，表示客户端不同步此类角色数据，设置此项可提高客户端整体性能。

                            - 1：订阅，表示客户端会同步这类角色，方便开发者处理用户信息。
                          default: 1
                    audience:
                      type: object
                      description: 观众的具体配置。
                      properties:
                        limit:
                          type: integer
                          description: 该角色的用户数量上限。默认值为 -1，表示无上限。最大值为 4294967296。
                          default: -1
                        verifyType:
                          type: integer
                          description: 验证类型，可设为：

                            - 0：允许匿名，表示任何用户都可以直接从客户端进入房间。

                            - 1：不允许匿名，表示只有指定用户才能进入房间，开发者可通过**房间-添加用户**接口预先指定能够进入房间的用户，这样可以提高安全性。
                          default: 0
                        subscribe:
                          type: integer
                          description: 客户端是否同步此类角色数据：

                            - 0：不订阅，表示客户端不同步此类角色数据，设置此项可提高客户端整体性能。

                            - 1：订阅，表示客户端会同步这类角色，方便开发者处理用户信息。
                          default: 1
            example:
      responses:
        '200':
          $ref: "#/components/responses/200"
    put:
      tags:
      - "房间预设"
      summary: 更新房间
      operationId: put
      description: 调用该方法更新指定房间的配置。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
      requestBody:
        description: 需要在请求包体中传入以下参数。
        content:
          application/json:
            schema:
              type: object
              required:
                - roomName
                - roleConfig
              properties:
                roomName:
                  type: string
                  description: 房间名称，用于显示，长度在 64 字节以内。
                roleConfig:
                  type: object
                  description: 角色配置，用于指定可以进入房间的角色。
                  required:
                      - host
                      - audience
                  properties:
                    host:
                      type: object
                      description: 主播的具体配置。
                      properties:
                        limit:
                          type: integer
                          description: 该角色的用户数量上限。默认值为 -1，表示无上限。最大值为 4294967296。
                          default: -1
                        verifyType:
                          type: integer
                          description: 验证类型，可设为：

                            - 0：允许匿名，表示任何用户都可以直接从客户端进入房间。

                            - 1：不允许匿名，表示只有指定用户才能进入房间，开发者可通过**房间-添加用户**接口预先指定能够进入房间的用户，这样可以提高安全性。
                          default: 0
                        subscribe:
                          type: integer
                          description: 客户端是否同步此类角色数据：

                            - 0：不订阅，表示客户端不同步此类角色数据，设置此项可提高客户端整体性能。

                            - 1：订阅，表示客户端会同步这类角色，方便开发者处理用户信息。
                          default: 1
                    audience:
                      type: object
                      description: 观众的具体配置。
                      properties:
                        limit:
                          type: integer
                          description: 该角色的用户数量上限。默认值为 -1，表示无上限。最大值为 4294967296。
                          default: -1
                        verifyType:
                          type: integer
                          description: 验证类型，可设为：

                            - 0：允许匿名，表示任何用户都可以直接从客户端进入房间。

                            - 1：不允许匿名，表示只有指定用户才能进入房间，开发者可通过**房间-添加用户**接口预先指定能够进入房间的用户，这样可以提高安全性。
                          default: 0
                        subscribe:
                          type: integer
                          description: 客户端是否同步此类角色数据：

                            - 0：不订阅，表示客户端不同步此类角色数据，设置此项可提高客户端整体性能。

                            - 1：订阅，表示客户端会同步这类角色，方便开发者处理用户信息。
                          default: 1
            example:
      responses:
        '200':
          $ref: "#/components/responses/200"
    get:
      tags:
      - "房间预设"
      summary: 查询房间
      operationId: get
      description: 调用该方法查询指定房间的配置。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
      responses:
        '200':
          description: 操作成功。
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 错误码。0 表示请求成功，非 0 表示失败。
                  msg:
                    type: string
                    description: 错误描述。
                  data:
                    type: object
                    properties:
                        roomName:
                          type: string
                          description: 房间名称，用于显示。
                        roomUuid:
                          type: string
                          description: 房间的唯一标识符，也是加入 RTC 和 RTM 的频道名。
                        roleConfig:
                          type: object
                          description: 角色配置，用于指定可以进入房间的角色。
                          properties:
                            host:
                              type: object
                              description: 主播的具体配置。
                              properties:
                                limit:
                                  type: integer
                                  description: 该角色的用户数量上限。默认值为 -1，表示无上限。最大值为 4294967296。
                                  default: -1
                                verifyType:
                                  type: integer
                                  description: 验证类型，可设为：

                                    - 0：允许匿名，表示任何用户都可以直接从客户端进入房间。

                                    - 1：不允许匿名，表示只有指定用户才能进入房间，开发者可通过**房间-添加用户**接口预先指定能够进入房间的用户，这样可以提高安全性。
                                  default: 0
                                subscribe:
                                  type: integer
                                  description: 客户端是否同步此类角色数据：

                                    - 0：不订阅，表示客户端不同步此类角色数据，设置此项可提高客户端整体性能。

                                    - 1：订阅，表示客户端会同步这类角色，方便开发者处理用户信息。
                                  default: 1
  /scene/apps/{appId}/v1/rooms/{roomUuid}/users:
    put:
      tags:
      - "房间预设"
      summary: 添加用户
      operationId: put
      description: 调用该方法为指定房间添加一个用户。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
      requestBody:
        description: 需要在请求包体中传入以下参数。
        content:
          application/json:
            schema:
              type: object
              required:
                - userUuid
                - userName
                - role
              properties:
                userUuid:
                  type: string
                  description: 用户的唯一标识，也是登录 RTM 系统时使用的用户 ID。长度在 64 字节以内。以下为支持的字符集范围：
                    
                    - 26 个小写英文字母 a-z
                    
                    - 26 个大写英文字母 A-Z
                    
                    - 10 个数字 0-9
                    
                    - 空格
                    
                    - "!", "#", "$", "%", "&", "(", ")", "+", "-", ":", ";", "<", "=", ".", ">", "?", "@", "[", "]", "^", "_", " {", "}", "|", "~", ","
                userName:
                  type: string
                  description: 用户名，用于显示，长度在 64 字节以内。
                role:
                  type: string
                  description: 用户在房间内的角色。长度在 20 字节以内。
            example:
      responses:
        '200':
          description: 操作成功。
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 业务状态码。0 表示请求成功，非 0 表示失败。
                  msg:
                    type: string
                    description: 详细信息。
                  data:
                    type: object
                    properties:
                      userUuid:
                        type: string
                        description: 用户 uuid。
                      result:
                        type: integer
                        description: 创建用户的结果：

                          - 成功创建该用户。

                          - 该用户已存在。

                          - 该角色不存在。

                          - 该角色的用户数量已达上限。
    delete:
      tags:
      - "房间预设"
      summary: 删除用户
      operationId: delete
      description: 调用该方法删除指定用户。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
      requestBody:
        description: 需要在请求包体中传入以下参数。
        content:
          application/json:
            schema:
              type: object
              required:
                - userUuid
                - userName
                - role
              properties:
                userUuid:
                  type: string
                  description: 用户 uuid。这是用户的唯一标识符，也是登录 RTM 系统时使用的用户 ID。长度在 64 字节以内。以下为支持的字符集范围：
                    
                    - 26 个小写英文字母 a-z
                    
                    - 26 个大写英文字母 A-Z
                    
                    - 10 个数字 0-9
                    
                    - 空格
                    
                    - "!", "#", "$", "%", "&", "(", ")", "+", "-", ":", ";", "<", "=", ".", ">", "?", "@", "[", "]", "^", "_", " {", "}", "|", "~", ","
                userName:
                  type: string
                  description: 用户名，用于显示，长度在 64 字节以内。
                role:
                  type: string
                  description: 用户在房间内的角色。长度在 20 字节以内。
            example:
      responses:
        '200':
          description: 操作成功。
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 业务状态码。0 表示请求成功，非 0 表示失败。
                  msg:
                    type: string
                    description: 详细信息。
                  data:
                    type: object
                    properties:
                      userUuid:
                        type: string
                        description: 用户 uuid。
                      result:
                        type: integer
                        description: 删除用户的结果：

                          - 成功删除该用户。

                          - 该用户不存在。
  /scene/apps/{appId}/v1/rooms/{roomUuid}/users/{userUuid}/entry:
    post:
      tags:
          - "房间直播"
      summary: 用户进入房间
      operationId: post
      description: 调用该方法让指定用户进入房间。
      parameters:
          - $ref: "#/components/parameters/appid"
          - $ref: "#/components/parameters/roomid"
          - $ref: "#/components/parameters/userid"
          - $ref: "#/components/parameters/contentType"
          - $ref: "#/components/parameters/authorization"
      requestBody:
        description: 你需要在请求包体中传入以下参数。
        content:
          application/json:
            schema:
              type: object
              required:
                - userName
                - role
              properties:
                userName:
                  type: string
                  description: 用户名，用于显示，长度在 64 字节以内。
                role:
                  type: string
                  description: 用户在房间内的角色。长度在 20 字节以内。
                streamUuid:
                  type: string
                  description: 用户主流的 uuid。取值范围 1 到 (2<sup>32</sup>-1)。如不设，系统会自动生成一个主流 uuid，用于加入 RTC 频道收发流。
                publishType:
                  type: integer
                  description: 用户主流的发布模式：

                    - 0：（默认）发布模式与上次进入房间时保持一致。如为首次进入房间，则默认不发布主流。
                  
                    - 1：发布主流。
                  
                    - 2：不发布主流。
                  default: 0
      responses:
        '200':
          description: 操作成功。
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 业务状态码。0 表示请求成功，非 0 表示失败。
                  msg:
                    type: string
                    description: 详细信息。
                  data:
                    type: object
                    properties:
                      room:
                        type: object
                        description: 房间配置。
                        properties:
                          roomInfo:
                            type: object
                            description: 房间信息。
                            properties:
                              roomName:
                                type: string
                                description: 房间名称，用于显示。
                              roomUuid:
                                type: string
                                description: 房间 uuid，房间的唯一标识符。
                          roomState:
                            type: object
                            description: 房间状态。
                            properties:
                              state:
                                type: integer
                                description: 房间当前状态：

                                  - 0：未开始。
                              
                                  - 1：进行中。

                                  - 2：已结束，新用户无法进入。
                              startTime:
                                type: integer
                                description: 开始时间，UTC 时间戳，房间开始后此字段有值。
                              muteChat:
                                type: object
                                description: 是否禁止文字聊天。
                                properties:
                                  audience:
                                    type: integer
                                    description: 是否禁止观众进行文字聊天：

                                      - 0：不禁止

                                      - 1：禁止
                                    default: 0
                                  host:
                                    type: integer
                                    description: 是否禁止主播进行文字聊天：

                                      - 0：不禁止

                                      - 1：禁止
                                    default: 0
                              muteAudio:
                                type: object
                                description: 是否禁止语音。
                                properties:
                                  audience:
                                    type: integer
                                    description: 是否禁止观众发送语音：

                                      - 0：不禁止

                                      - 1：禁止
                                    default: 0
                                  host:
                                    type: integer
                                    description: 是否禁止主播发送语音：

                                      - 0：不禁止

                                      - 1：禁止
                                    default: 0
                              muteVideo:
                                type: object
                                description: 是否禁止发送视频。
                                properties:
                                  host:
                                    type: integer
                                    description: 是否禁止主播发送视频：

                                      - 0：不禁止

                                      - 1：禁止
                                    default: 0
                      user:
                        type: object
                        description: 当前用户配置。
                        properties:
                          userUuid:
                            type: string
                            description: 用户 uuid，用户的唯一标识符。
                          userName:
                            type: string
                            description: 用户名，用于显示。
                          role:
                            type: string
                            description: 用户在房间内的角色。
                          streamUuid:
                            type: string
                            description: 用户主流 uuid。
                          userToken:
                            type: string
                            description: 用户 token，用于后续房间内请求。
                          rtmToken:
                            type: string
                            description: 用于 RTM 服务的 token。
                          rtcToken:
                            type: string
                            description: 用于 RTC 服务的 token。
                          muteChat:
                            type: string
                            description: 此用户是否禁止文字聊天：

                              - 不禁止。

                              - 禁止。
                          userProperties:
                            type: object
                            description: 用户扩展属性。
                          streams:
                            type: object
                            description: 流配置。
                            properties:
                              streamUuid:
                                type: string
                                description: 流 uuid。
                              streamName:
                                type: string
                                description: 流名称，用于显示。
                              videoSourceType:
                                type: integer
                                description: 视频来源：

                                  - 0：无。
                                
                                  - 1：摄像头。

                                  - 2：屏幕。
                                default: 1
                              audioSourceType:
                                type: integer
                                description: 音频来源：

                                  - 0：无。

                                  - 1：麦克风。
                                default: 1
                              videoState:
                                type: integer
                                description: 视频状态：
                                
                                  - 0：关闭。

                                  - 1：开启。

                                  - 2：禁用。
                                default: 1
                              audioState:
                                type: integer
                                description: 音频状态：
                                
                                  - 0：关闭。

                                  - 1：开启。

                                  - 2：禁用。
                                default: 1
                              updateTime:
                                type: integer
                                description: 流状态更新时间，UTC 时间戳。
                              state:
                                type: integer
                                description: 流是否有效：

                                  - 0：无效。

                                  - 1：有效。
                                default: 1
                      sysConfig:
                        type: object
                        description: 系统配置。
                        properties:
                          sequenceTimeout:
                            type: integer
                            description: 毫秒。
                            default: 3000
  /scene/apps/{appId}/v1/rooms/{roomUuid}/users/{userUuid}:
    put:
      tags:
        - 房间直播
      summary: 更新用户状态
      operationId: put
      description: 调用该方法更新指定用户的状态。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - $ref: "#/components/parameters/userid"
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
        - $ref: "#/components/parameters/token"
      requestBody:
        description: 你需要在请求包体中传入以下参数。
        content:
          application/json:
            schema:
              type: object
              required:
                - userName
                - muteChat
              properties:
                userName:
                  type: string
                  description: 用户名称，用于显示。
                muteChat:
                  type: integer
                  description: 是否禁止文字聊天：

                    - 0：不禁止。

                    - 1：禁止。
      responses:
        '200':
          -$ref: "#/components/responses/200"
    get:
      tags:
          - "房间直播"
      summary: 获取用户列表
      operationId: get
      description: 调用该方法获取指定房间内的所有用户。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
        - $ref: "#/components/parameters/token"
        - in: query
          name: role
          required: false
          schema:
            type: string
          description: 用户角色，可传多个。
        - in: query
          name: nextId
          required: false
          schema:
            type: string
          description: TODO
        - in: query
          name: count
          required: false
          schema:
            type: string
          description: 需获取的用户数量。
        - in: query
          name: updateTimeOffset
          required: false
          schema:
            type: string
          description: 更新时间偏移，UTC 时间戳。
        - in: query
          name: includeOffline
          required: false
          schema:
            type: string
          description: 是否包含已离开频道的用户：

            - 0：（默认）不包含。

            - 1：包含。
      responses:
        '200':
          description: 操作成功。
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 错误码。0 表示请求成功，非 0 表示失败。
                  msg:
                    type: string
                    description: 错误描述。
                  data:
                    type: object
                    properties:
                        total:
                          type: integer
                          description: 用户数量。
                        nextId:
                          type: string
                          description: 下一次起始 ID，如果没有下一批，则为 null。
                        list:
                          type: array
                          description: 用户列表。
                          items:
                            type: object
                            properties:
                              userName:
                                type: string
                                description: 用户名称，用于显示。
                              userUuid:
                                type: string
                                description: 用户 uuid，用户的唯一标识符。
                              role:
                                type: string
                                description: 用户在房间内的角色。
                              muteChat:
                                type: integer
                                description: 该用户是否禁止文字聊天：

                                  - 0：不禁止。
                              
                                  - 1：禁止。
                              updateTime:
                                type: string
                                description: 更新时间，UTC 时间戳。
                              state:
                                type: string
                                description: 用户是否在房间内：
                                
                                  - 0：不在房间内。
                                
                                  - 1：在房间内。
  /scene/apps/{appId}/v1/rooms/{roomUuid}/users/{toUserUuid}/chat/peer:
    post:
      tags:
        - 房间直播
      summary: 发送私聊消息
      operationId: post
      description: 调用该方法向指定用户发送消息。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - in: path
          name: toUserUuid
          required: true
          schema:
            type: string
          description: 待接收消息的用户的 uuid。
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
        - $ref: "#/components/parameters/token"
      requestBody:
        description: 你需要在请求包体中传入以下参数。
        content:
          application/json:
            schema:
              type: object
              required:
                - message
                - type
              properties:
                message:
                  type: string
                  description: 消息内容，不能超过 32 KB。
                type:
                  type: integer
                  description: 消息类型，目前仅支持设为 1，文本消息。
                  default: 1
      responses:
        '200':
          $ref: "#/components/responses/200"
  /scene/apps/{appId}/v1/rooms/{roomUuid}/users/userStreams:
    get:
      tags:
        - "房间直播"
      summary: 获取用户和流列表
      operationId: get
      description: 调用该方法获取指定房间内的所有用户和流列表。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
        - $ref: "#/components/parameters/token"
        - $ref: "#/components/parameters/role"
        - $ref: "#/components/parameters/nextId"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/updateTimeOffset"
        - $ref: "#/components/parameters/includeOffline"
      responses:
        '200':
          description: 操作成功。
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 错误码。0 表示请求成功，非 0 表示失败。
                  msg:
                    type: string
                    description: 错误描述。
                  data:
                    type: object
                    properties:
                        total:
                          type: integer
                          description: 用户数量。
                        nextId:
                          type: string
                          description: 下一次起始 ID，如果没有下一批，则为 null。
                        list:
                          type: array
                          description: 用户和流列表。
                          items:
                            type: object
                            properties:
                              userName:
                                type: string
                                description: 用户名称，用于显示。
                              userUuid:
                                type: string
                                description: 用户 uuid，用户的唯一标识符。
                              role:
                                type: string
                                description: 用户在房间内的角色。
                              muteChat:
                                type: integer
                                description: 该用户是否禁止文字聊天：

                                  - 0：不禁止。
                              
                                  - 1：禁止。
                              updateTime:
                                type: string
                                description: 更新时间，UTC 时间戳。
                              state:
                                type: string
                                description: 用户是否在房间内：
                                
                                  - 0：不在房间内。
                                
                                  - 1：在房间内。
                              streams:
                                type: array
                                description: 该用户的流列表。
                                items:
                                  type: object
                                  properties:
                                    streamName:
                                      type: string
                                      description: 流名称，用于显示。
                                    streamUuid:
                                      type: string
                                      description: 流 uuid，流的唯一标识符。
                                    videoSourceType:
                                      type: integer
                                      description: 视频来源：
                                    audioSourceType:
                                      type: integer
                                      description: 
                                    videoState:
                                      type: integer
                                      description: 
                                    audioState:
                                      type: integer
                                      description:
                                    updateTime:
                                      type: integer
                                      description:
                                    state:
                                      type: integer
                                      description:
  /scene/apps/{appId}/v1/rooms/{roomUuid}/users/{userUuid}/properties/{key}:
    put:
      tags:
          - "房间直播"
      summary: 设置用户属性
      operationId: put
      description: 调用该方法设置指定用户的属性。
      parameters:
        - $ref: "#/components/parameters/appid"
        - $ref: "#/components/parameters/roomid"
        - $ref: "#/components/parameters/userid"
        - in: path
          name: key
          required: true
          description: 属性名，必须为可见字符且长度不得超过 32 字节。
          schema:
            type: string
        - $ref: "#/components/parameters/contentType"
        - $ref: "#/components/parameters/authorization"
        - $ref: "#/components/parameters/token"
      responses:
        "200":
          $ref: "#/components/responses/200"
  /scene/apps/{appId}/v1/rooms/{roomUuid}/users/{userUuid}/exit:
    post:
      tags:
          - "房间直播"
      summary: 剔除用户
      operationId: post
      description: 调用该方法让指定用户离开房间。
      parameters:
          - $ref: "#/components/parameters/appid"
          - $ref: "#/components/parameters/roomid"
          - $ref: "#/components/parameters/userid"
          - $ref: "#/components/parameters/contentType"
          - $ref: "#/components/parameters/authorization"
          - $ref: "#/components/parameters/token"
      responses:
        "200":
          $ref: "#/components/responses/200"
  /scene/apps/{appId}/v1/rooms/{roomUuid}/sequences:
    get:
      tags:
          - "房间直播"
      summary: 获取房间消息列表
      operationId: get
      description: 调用该方法
      parameters:
      responses:
  /scene/apps/{appId}/v1/rooms/{roomUUid}/states/{state}:
    put:
      tags:
        - "房间直播"
      summary: 切换房间状态
      operationId: get
      description: 调用该方法
      parameters:
      responses:
  /scene/apps/{appId}/v1/rooms/{roomUuid}/users/streams:
    get:
      tags:
        - "房间直播"
      summary: 获取流列表
      operationId: get
      description: 调用该方法
      parameters:
      responses:
  /scene/apps/{appId}/v1/rooms/{roomUuid}/users/{userUuid}/streams/{streamUuid}:
    post:
      tags:
        - "房间直播"
      summary: 获取流列表
      operationId: get
      description: 调用该方法
      parameters:
      responses:
  /scene/v1/rtm/room/state:
    get:
      tags:
        - "消息通知"
      summary: 房间状态改变
      operationId: get
      description: 房间状态变化时，云服务会在房间内全量同步此消息。
      responses:
        "200": 

  /scene/v1/rtm/room/roles/mute:
    get:
      tags:
        - "消息通知"
      summary: 房间状态改变
      operationId: get
      description: 房间状态变化时，此消息会全量同步。
      responses:
  /scene/v1/rtm/room/chat:
    get:
      tags:
        - "消息通知"
      summary: 房间状态改变
      operationId: get
      description: 房间状态变化时，此消息会全量同步。
      responses:
  /scene/v1/rtm/room/properties:
    get:
      tags:
        - "消息通知"
      summary: 房间状态改变
      operationId: get
      description: 房间状态变化时，此消息会全量同步。
      responses:
  /scene/v1/rtm/room/user:
    get:
      tags:
        - "消息通知"
      summary: 房间状态改变
      operationId: get
      description: 房间状态变化时，此消息会全量同步。
      responses:
  /scene/v1/rtm/room/user/properties:
    get:
      tags:
        - "消息通知"
      summary: 房间状态改变
      operationId: get
      description: 房间状态变化时，此消息会全量同步。
      responses:
  /scene/v1/rtm/channel/stream:
    get:
      tags:
        - "消息通知"
      summary: 房间状态改变
      operationId: get
      description: 房间状态变化时，此消息会全量同步。
      responses:
  /scene/v1/rtm/channel/extension:
    get:
      tags:
        - "消息通知"
      summary: 房间状态改变
      operationId: get
      description: 房间状态变化时，此消息会全量同步。
      responses:
  /scene/v1/rtm/peer:
    get:
      tags:
        - "消息通知"
      summary: 房间状态改变
      operationId: get
      description: 房间状态变化时，此消息会全量同步。
      responses:
components:
  responses:
    200:
      description: 操作成功。
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                description: 业务状态码。0 表示请求成功，非 0 表示失败。
              msg:
                type: string
                description: 详细信息。
  parameters:
    appid:
      name: appId
      in: path
      required: true
      description: Agora 为 App 开发者签发的 [App ID](https://docs.agora.io/cn/Agora%20Platform/term_appid)。
      schema:
        type: string
    roomid:
      name: roomUuid
      required: true
      in: path
      schema:
        type: string
      description: 房间的唯一标识符，也是加入 RTC 和 RTM 的频道名。长度在 64 字节以内。以下为支持的字符集范围（共 89 个字符）：

        - 26 个小写英文字母 a-z

        - 26 个大写英文字母 A-Z

        - 10 个数字 0-9

        - 空格

        - "!", "#", "$", "%", "&", "(", ")", "+", "-", ":", ";", "<", "=", ".", ">", "?", "@", "[", "]", "^", "_", " {", "}", "|", "~", ","
    contentType:
      in: header
      name: Content-Type
      required: true
      schema:
        type: string
        enum:
          - application/json
    authorization:
      in: header
      name: Authorization
      required: true
      schema:
        type: string
        enum:
          - Basic base64LoginString
    userid:
      in: header
      name: userUuid
      required: true
      schema:
        type: string
      description: 用户的唯一标识符，也是登录 RTM 系统时使用的用户 ID。长度在 64 字节以内。以下为支持的字符集范围：
                    
        - 26 个小写英文字母 a-z
                    
        - 26 个大写英文字母 A-Z
                    
        - 10 个数字 0-9
                    
        - 空格
                    
        - "!", "#", "$", "%", "&", "(", ")", "+", "-", ":", ";", "<", "=", ".", ">", "?", "@", "[", "]", "^", "_", " {", "}", "|", "~", ","
    userName:
      in: path
      name: userName
      required: true
      schema:
        type: string
    token:
      in: path
      name: token
      required: true
      schema:
        type: string
      description: 用户进入房间后获得的用户 token。
    role:
      in: query
      name: role
      required: false
      schema:
        type: string
      description: 用户角色，可传多个。
    nextId:
      in: query
      name: nextId
      required: false
      schema:
        type: string
      description: TODO
    count:
      in: query
      name: count
      required: false
      schema:
        type: string
      description: 需获取的用户数量。
    updateTimeOffset:
      in: query
      name: updateTimeOffset
      required: false
      schema:
        type: string
      description: 更新时间偏移，UTC 时间戳。
    includeOffline:
      in: query
      name: includeOffline
      required: false
      schema:
        type: string
      description: 是否包含已离开频道的用户：

        - 0：（默认）不包含。

        - 1：包含。