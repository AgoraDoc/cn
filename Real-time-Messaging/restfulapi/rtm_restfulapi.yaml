openapi: 3.0.0
info:

  description: >
    你可以使用 Agora RTM RESTful API 查询用户事件和频道事件。

  
      <div class="info-msg">
        <i class="fa fa-info-circle"></i> 注意事项：对于每个 App ID， RESTful API 每秒钟的请求数不能超过 10 次。
      </div>
    
    ## 认证

    Agora RTM RESTful API 仅支持 HTTPS 协议。你可以使用以下任意一种认证方式：

    <li><a href="#basicauth">Basic 认证</a></li>
    <li><a href="#tokenauth">Token 认证</a></li>

      ### <a name="basicauth"></a>Basic 认证
    
      发送请求时，你需要提供 `api_key:api_secret` 通过 Basic HTTP 认证并填入 HTTP 请求头部的 `Authorization` 字段：

      - `api_key`: Customer ID
    
      - `api_secret`: Customer Certificate

      你可以在控制台的 [RESTful API](https://console.agora.io/restful?_ga=2.175816613.605592384.1576459020-1595988498.1574647397) 页面找到你的 Customer ID 和 Customer Certificate。具体生成
      Authorization 字段的方法请参考 [RESTful API 认证](https://docs.agora.io/cn/faq/restful_authentication)。

      ### <a name="tokenauth"></a>Token 认证

      如果你已经在服务端生成了 RTM Token，你也可以选用 Token Authentication 认证。你需要再发送 HTTP 请求时在 HTTP 请求头部的 x-agora-token 字段和 x-agora-uid 字段分别填入：

      - 服务端生成的 RTM Token。 

      - 生成 RTM Token 时使用的 uid。

      **示例代码**

      ```java
        Request request = new Request.Builder()
        ...
        // 在 HTTP 请求头部的 x-agora-token 字段填入获取的 RTM Token

        .addHeader("x-agora-token", "<Your RTM Token>")

        // 在 HTTP 请求头部的 x-agora-uid 字段填入用于生成该 RTM Token 的 uid

        .addHeader("x-agora-uid", "<Your uid used to generate the RTM Token>")
      ```

      <div class="info-msg">
        <i class="fa fa-info-circle"></i> 关于如何生成 RTM Token，详见<a href="https://docs.agora.io/cn/Real-time-Messaging/rtm_token?platform=All%20Platforms">校验用户权限</a>
      </div>
    
    ## 数据格式

    所有的请求都发送给域名：api.agora.io。所有的请求 URL 和请求包体内容都是区分大小写的。请求和响应内容的格式均为 JSON。
      

    ## API 调用步骤

    - 查询用户上线或下线事件：直接调用 `user_events` 方法。

    - 查询用户加入或离开事件：直接调用 `channel_events` 方法。



    ## 响应状态码

    下表列出 Agora RTM RESTful API 常见 HTTP 响应状态码：
    

      | 状态码 | 描述                                           |
      | :----- | :------------------------------------------- |
      | 200    | 请求成功。    |
      | 400    | 请求的语法错误（如参数错误）。请根据返回提示检查。    |
      | 408    | 服务器请求超时或服务器无响应，建议稍后重试。  |

    ## 调试 RESTful API

    你可以使用 **Try it out** 功能在该文档页内进行 RESTful API 的调试。调试前你需要点击下方的 **Authorize** 进行鉴权。将你的 Customer ID 和 Customer Certificate 分别填入 **Username** 和 **Password**，然后点击 **Authorize**，完成鉴权。</div>

  version: Beta
  title: Agora RTM RESTful API
servers: 
  - url: https://api.agora.io
    description: Official Environment
security:
  - agora_auth: []


paths:
  /dev/v2/project/{appid}/rtm/vendor/user_events:
    get:
      tags:
      - "获取用户事件"
      summary: 获取用户上线或下线事件
      operationId: user_events   
      description: 该方法从 Agora RTM 服务器指定的地址获取用户上线或下线事件。

          <div class="warning-msg">
          <i class="fa fa-warning"></i> 注意事项：<ul>
          <li>RTM 后台最多存储 2000 条事件。</li>
          <li>单次返回最多 1000 条事件。</li>
          <li>我们对事件按地理区域缓存，因此不保证来自不同地理区域的事件的事件顺序的正确性。</li>
          <li>我们只在同一地理区域内同步事件，不在地理区域间同步。所以，你从某地理区域拉取了事件后，如果你从另一个区域再次拉取仍然会得到相同的事件。</li></ul>
          </div>

      parameters:
        - $ref: '#/components/parameters/appid'
      responses:
        '200':
          description: 成功从 Agora RTM 服务器指定的地址获取用户上线或下线事件。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_event_response'
              example:
                result: success
                request_id: 10116762670167749259
                events: { user_id: "rtmtest_RTM_4852_4857w7%", type: "Login", ts: "1578027420761" }

  /dev/v2/project/{appid}/rtm/vendor/channel_events:
    get:
      tags:
      - "获取频道事件"
      summary: 获取用户加入或离开频道事件
      operationId: channel_events
      description: 该方法从 Agora RTM 服务器指定的地址获取用户加入或离开频道事件。
      
          <div class="warning-msg">
            <i class="fa fa-warning"></i> 注意事项：<ul>
            <li>RTM 后台最多存储 2000 条事件。</li>
            <li>单次返回最多 1000 条事件。</li>
            <li>我们对事件按区域缓存，因此不保证来自不同区域的事件的事件顺序的正确性。</li>
            <li>我们只在同一区域内同步事件，不在区域间同步。所以，你从某区域拉取了事件后，如果你从另一个区域再次拉取仍然会得到相同的事件。</li>
          </div> 
        
      parameters:
        - $ref: '#/components/parameters/appid'
      responses:
        '200':
          description: 成功获取用户加入或离开频道事件。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_event_response'
              example:
                result: success
                request_id: 10116762670167749259
                events: { channel_id: "example_channel_id", user_id: "rtmtest_RTM_4852_4857w7%", type: "Join", ts: "1578027418981" }
                offset: 100
                limit: 20
                order: 
  

components:
  schemas:
    
    user_event_response:
      type: object
      properties:
        result:
          type: string
          description: >- 
            本次请求结果。

            - "success": 成功；

            - "failure": 失败。

        request_id:
          type: string
          description: 本次请求唯一的 ID。
        events:
          type: object
          description: 用户上线或下线事件。
          $ref: '#/components/schemas/user_events'

    user_events:
       type: object
       properties:
         user_id: 
           type: string
           description: 本次事件对应的用户名。
         type: 
           type: string
           description: >-
             事件类型：

             - "Login": 用户上线事件；

             - "Logout": 用户下线事件。

         ts: 
           type: integer
           description: 时间戳（ms）。

    channel_event_response:
      type: object
      properties:
        result:
          type: string
          description: >-
            本次请求结果。
              
              - "success": 成功；

              - "failure": 失败。           
        request_id:
          type: string
          description: 本次请求唯一的 ID。
        events:
          type: object
          description: 用户上线或下线事件。
          $ref: '#/components/schemas/channel_events'
    channel_events:
      type: object
      properties:
         user_id: 
          type: string
          description: 本次事件对应的用户名。
         type: 
          type: string
          description: >-
            事件类型：

            - "Join": 用户加入频道事件，

            - "Leave": 用户离开频道事件。
         ts: 
           type: integer
           description: 时间戳（ms）。

              

  parameters:
    appid:
      name: appid
      in: path
      required: true
      description: >-
        你的项目使用的 App ID。
      schema:
        type: string





  securitySchemes:
    agora_auth:
      type: http
      scheme: basic
